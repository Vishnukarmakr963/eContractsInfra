trigger: none  # No auto-deployment on commits
pr: none       # No auto-deployment on pull requests

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  webAppName: 'clm-webapp'  
  resourceGroup: 'econtracts-resource-group'
  rollbackEnabled: false  # Default: No rollback unless manually triggered
  retentionLimit: 3  # Keep only the last 3 builds for rollback
  solutionPath: 'Corevo.eContracts365.SPWeb/Corevo.eContracts365.SPWeb.sln'  # Path to the solution file

resources:
  repositories:
    - repository: deploymentRepo  # Alias for your GitHub repository
      type: github
      endpoint: MyGitHubServiceConnection  # GitHub service connection for your repository
      name: Vishnukarmakr963/eContracts-Version2.4.1.1-Final-SPWeb  # Your personal repository name
      ref: 2.4.1.1-Final-Patch-1  # Fetch only this branch
      trigger: none  # Prevents automatic triggers

steps:
# ðŸ“Œ Step 1: Checkout Only `Corevo.eContracts365.SPWeb` Project
- checkout: deploymentRepo
  path: 'eContracts'  # Checkout repository inside this folder

# ðŸ“Œ Step 2: Download Corevo Folder from DevOps Artifacts
- task: UniversalPackages@0
  displayName: 'Download Corevo Reference Folder'
  inputs:
    command: 'download'
    downloadDirectory: 'C:/Corevo'
    feedName: 'CorevoDependenciesNew'  # Make sure this is the correct feed name
    packageName: 'corevoreference'
    packageVersion: '2.0.0'


# ðŸ“Œ Step 3: Debug Step - List Files to Verify Path
- script: |
    echo "Listing files in workspace and Corevo folder:"
    ls -R $(Build.SourcesDirectory)
    ls -R C:/Corevo
  displayName: 'Debug - List Repository and Corevo Files'

# ðŸ“Œ Step 4: Restore NuGet Packages for `Corevo.eContracts365.SPWeb`
- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: '$(Build.SourcesDirectory)/eContracts/$(solutionPath)'

# ðŸ“Œ Step 5: Build the `Corevo.eContracts365.SPWeb` Project (Uses `C:/Corevo` DLLs)
- task: VSBuild@1
  displayName: 'Build Corevo.eContracts365.SPWeb'
  inputs:
    solution: '$(Build.SourcesDirectory)/eContracts/$(solutionPath)'
    msbuildArgs: '/p:Configuration=$(buildConfiguration)'
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# ðŸ“Œ Step 6: Store Build Artifacts for Future Rollback (Keep Only 3 Versions)
- task: PublishBuildArtifacts@1
  displayName: 'Save Build for Rollback'
  inputs:
    artifactName: 'econtracts-artifact'
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    retentionDays: 7  # Artifacts expire after 7 days

# ðŸ“Œ Step 7: Delete Older Builds Beyond 3 Versions
- script: |
    echo "Deleting old artifacts beyond retention limit..."
    builds=$(az pipelines runs list --top 10 --query "[].id" -o tsv)  # Fetch last 10 builds
    count=0
    for build in $builds; do
      count=$((count+1))
      if [ $count -gt $(retentionLimit) ]; then
        echo "Deleting build: $build"
        az pipelines runs delete --id $build --yes
      fi
    done
  displayName: 'Clean Up Old Build Versions'
  condition: succeeded()

# ðŸ“Œ Step 8: Deploy `Corevo.eContracts365.SPWeb` to Production
- task: AzureWebApp@1
  displayName: 'Deploy Corevo.eContracts365.SPWeb to Production'
  condition: and(succeeded(), eq(variables['rollbackEnabled'], 'false')) # Skip if rollback is triggered
  inputs:
    azureSubscription: 'AzureServiceConnection'
    appName: '$(webAppName)'
    package: '$(Build.ArtifactStagingDirectory)/*.zip'

# ðŸ“Œ Step 9: Rollback to Last Working Build (Manually Triggered)
- task: AzureWebApp@1
  displayName: 'Rollback to Last Working Build'
  condition: eq(variables['rollbackEnabled'], 'true') # Runs only if rollback is triggered
  inputs:
    azureSubscription: 'AzureServiceConnection'
    appName: '$(webAppName)'
    package: '$(Pipeline.Workspace)/econtracts-artifact/*.zip'  # Redeploy previous artifact
