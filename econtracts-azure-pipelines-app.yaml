#trigger: none  # No auto-deployment on commits
pr: none       # No auto-deployment on pull requests

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  webAppName: 'clm-webapp'  
  resourceGroup: 'econtracts-resource-group'
  rollbackEnabled: false  # Default: No rollback unless manually triggered
  retentionLimit: 3  # Keep only the last 3 builds for rollback

resources:
  repositories:
    - repository: deploymentRepo  # Alias for your application GitHub repository
      type: github
      endpoint: MyGitHubServiceConnection  # GitHub service connection for your app
      name: Vishnukarmakr963/eContracts-Version2.4.1.1-Final-SPWeb  # Your app repository
      ref: 2.4.1.1-Final-Patch-1  # Fetch only this branch
      trigger: none  # Prevents automatic triggers from this repo

    - repository: infraRepo  # Alias for your infrastructure GitHub repository
      type: github
      endpoint: MyGitHubServiceConnection  # GitHub service connection for infra repo
      name: Vishnukarmakr963/eContractsInfra  # Your infra repository
      ref: main  # Use the latest version from main branch
      trigger: none  # Prevents automatic triggers from this repo

steps:
# ðŸ“Œ Step 1: Checkout Application Repository
- checkout: deploymentRepo
  path: 'eContracts'  # Checkout application repository inside this folder

# ðŸ“Œ Step 2: Checkout Infrastructure Repository (Contains Corevo)
- checkout: infraRepo
  path: 'eContractsInfra'  # Checkout infra repository inside this folder

# ðŸ“Œ Step 3: Copy Corevo Folder from `eContractsInfra` to `C:/Corevo`
- script: |
    echo "Copying Corevo folder from Infra Repo to C:/..."
    xcopy "$(Build.SourcesDirectory)/eContractsInfra/Corevo" "C:/Corevo" /E /Y
  displayName: 'Copy Corevo Reference Folder'

# ðŸ“Œ Step 4: Debug Step - List Corevo Folder to Verify
- script: |
    echo "Checking Corevo folder..."
    dir C:\Corevo
  displayName: 'Debug - List Corevo Folder'

# ðŸ“Œ Step 5: Restore NuGet Packages for `Corevo.eContracts365.SPWeb`
- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: '$(Build.SourcesDirectory)/eContracts/Corevo.eContracts365.SPWeb/Corevo.eContracts365.SPWeb.sln'

# ðŸ“Œ Step 6: Build the `Corevo.eContracts365.SPWeb` Project (Uses `C:/Corevo` DLLs)
- task: VSBuild@1
  displayName: 'Build Corevo.eContracts365.SPWeb'
  inputs:
    solution: '$(Build.SourcesDirectory)/eContracts/Corevo.eContracts365.SPWeb/Corevo.eContracts365.SPWeb.sln'
    msbuildArgs: '/p:Configuration=$(buildConfiguration)'
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# ðŸ“Œ Step 7: Store Build Artifacts for Future Rollback (Keep Only 3 Versions)
- task: PublishBuildArtifacts@1
  displayName: 'Save Build for Rollback'
  inputs:
    artifactName: 'econtracts-artifact'
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    retentionDays: 7  # Artifacts expire after 7 days

# ðŸ“Œ Step 8: Deploy `Corevo.eContracts365.SPWeb` to Production
- task: AzureWebApp@1
  displayName: 'Deploy Corevo.eContracts365.SPWeb to Production'
  condition: and(succeeded(), eq(variables['rollbackEnabled'], 'false')) # Skip if rollback is triggered
  inputs:
    azureSubscription: 'AzureServiceConnection'
    appName: '$(webAppName)'
    package: '$(Build.ArtifactStagingDirectory)/*.zip'

# ðŸ“Œ Step 9: Rollback to Last Working Build (Manually Triggered)
- task: AzureWebApp@1
  displayName: 'Rollback to Last Working Build'
  condition: eq(variables['rollbackEnabled'], 'true') # Runs only if rollback is triggered
  inputs:
    azureSubscription: 'AzureServiceConnection'
    appName: '$(webAppName)'
    package: '$(Pipeline.Workspace)/econtracts-artifact/*.zip'  # Redeploy previous artifact
